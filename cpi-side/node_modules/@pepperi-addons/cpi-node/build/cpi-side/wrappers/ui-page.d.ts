import { CPIDBObject } from './db-object';
import { ALCustomObject } from './custom-object';
export declare const ALUiPageTypes: {
    Invalid: number;
    Main: number;
    Activities: number;
    AgentDashboard: number;
    AccountDashboard: number;
    Accounts: number;
    AccountLocations: number;
    Catalogs: number;
    Catalog: number;
    CatalogForOpenInMatrix: number;
    AccountsForDuplicateOrder: number;
    Cart: number;
    OrderInfo: number;
    OrderItemInfo: number;
    AccountInfo: number;
    GeneralActivityInfo: number;
    GeneralActivityPlanningInfo: number;
    GeneralActivityForMultiAccounts: number;
    AccountNotifications: number;
    ContactPersons: number;
    ContactPersonInfo: number;
    CartOrderItemInfo: number;
    CatalogForChainOrder: number;
    CustomWebform_Order: number;
    CustomWebform_GeneralActivity: number;
    CustomWebform_Account: number;
    OnlinePayment: number;
    GenericOpenForm: number;
    CartGridSetValue: number;
    OnlineObjects: number;
    QAToolsWorkflows: number;
    QAToolsTransitionForm: number;
    ActivitiesForAccountDashboard: number;
    GenericList: number;
    GenericListForListOfObjects: number;
    CustomWebForm_ContactPerson: number;
};
export interface ALUiPageBase {
    key: string;
    type: number;
    title: string;
    subTitle: string;
    dbObject: CPIDBObject | undefined;
    rebuild(): Promise<void>;
}
export interface ALUiPageBaseObject extends ALUiPageBase {
    customObject: ALCustomObject;
}
export declare type ALUiPageBaseList = ALUiPageBase;
export interface ALUiPageMain extends ALUiPageBase {
    otherActions: ALCustomObject;
    quickAction: ALCustomObject;
}
export declare class ALUiPageManager {
    get(key: string): Promise<ALUiPageBase | undefined>;
    create(type: number, dbObject?: CPIDBObject): Promise<ALUiPageBase | undefined>;
    createGenericListPage(uiControlType: string, dbObjects?: CPIDBObject[]): Promise<ALUiPageBase | undefined>;
}
