import { DataViewFieldType } from '@pepperi-addons/papi-sdk/dist/entities';
/**
 * An object that represents a UI field
 */
export declare class UIField {
    private customField;
    /**
     * The field's ID aka APIName
     */
    get fieldID(): string;
    /**
     * The field's Type
     */
    get type(): DataViewFieldType;
    /**
     * The field's value
     * @usage This is the value used when the field is editable
     * @warning Changing it will not change the field value on the DataObject
     */
    get value(): string;
    set value(value: string);
    /**
     * The field's formatted value
     *
     * This is the value used when the field is not editable
     */
    get formattedValue(): string;
    set formattedValue(value: string);
    /**
     * The field's title
     */
    get title(): string;
    set title(value: string);
    /**
     * The field's accessory
     *
     * @example For Currency Type this will return the configured currency sign (eg. `$`)
     */
    get accessory(): string;
    set accessory(value: string);
    /**
     * The amount of digits for a decimal field
     */
    get decimalDigits(): number;
    set decimalDigits(value: number);
    /**
     * The field's optional values
     * @usage Used in drop downs
     */
    get optionalValues(): {
        Key: string;
        Value: string;
    }[];
    set optionalValues(value: {
        Key: string;
        Value: string;
    }[]);
    /**
     * true if the field is readonly
     */
    get readonly(): boolean;
    set readonly(value: boolean);
    /**
     * true if the field is highlighted
     */
    get highlighted(): boolean;
    set highlighted(value: boolean);
    /**
     * true if the field should be mandatory
     */
    get mandatory(): boolean;
    set mandatory(value: boolean);
    /**
     * true if the field should be visible
     */
    get visible(): boolean;
    set visible(value: boolean);
    /**
     * the field text color
     */
    get textColor(): string;
    set textColor(value: string);
    /**
     * the field background color
     */
    get backgroundColor(): string;
    set backgroundColor(value: string);
    /**
     * the field events
     *
     * @example
     * For a TSA Button this will return
     * ```json
     * {
     *      "OnClick": {
     *          "Key": "TSAButton",
     *          "Data": {
     *              "DataObject": {
     *                  "UUID": "",
     *                  "Resource": {
     *                      "Type": "activities",
     *                      "Name": "new activity"
     *                  },
     *                  "FieldID": "TSASomeButton"
     *              }
     *          }
     *      }
     * }
     * ```
     */
    get events(): {
        [key: string]: {
            Key: string;
            Data: any;
        };
    };
    set events(value: {
        [key: string]: {
            Key: string;
            Data: any;
        };
    });
    toJSON(): {
        Title: string;
        FieldID: string;
        Value: string;
        FormattedValue: string;
        Readonly: boolean;
        Mandatory: boolean;
        Visible: boolean;
        Accessory: string;
        DecimalDigits: number;
        OptionalValues: {
            Key: string;
            Value: string;
        }[];
        Highlighted: boolean;
        TextColor: string;
        BackgroundColor: string;
        Events: {
            [key: string]: {
                Key: string;
                Data: any;
            };
        };
    };
}
