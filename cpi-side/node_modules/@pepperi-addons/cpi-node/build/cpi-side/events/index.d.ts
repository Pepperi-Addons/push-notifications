/**
 *
 *
 * # CPI Node Events
 *
 * ## Introduction
 * The **CPI Node** allows addons to dynamically control the application's flow and layout.
 *
 * This is done by exposing events that the addons can subscribe to with an {@link Interceptor} and then perform custom logic within these interceptors.
 *
 * ## Subscribing to events
 * Addons should subscribe to events within their exported `load` function.
 * Every time the **CPI Node** is loaded the subcriptions are reset, and the addon needs to resubscribe in the `load` function.
 *
 * Subscribing is done using the `pepperi.events.intercept` function which recieves 3 parameters:
 * * **The event key** - What event the addon wants to subscribe to
 * * **A filter object** - Only subscribe to certain events
 * * **The interceptor** - The function that is call when this event happens
 *
 * #### Subscribing to the {@link EventKeys | RecalculateUIObject} event of the UserHomePage {@link UIObject}
 * ```typescript
 * export async function load() {
 *      const filter = {
 *          UIObject: {
 *              Context: {
 *                  Name: 'UserHomePage'
 *              }
 *          }
 *      };
 *      pepperi.events.intercept('RecalculateUIObject', filter, async (data) => {
 *          const uiObject = data.UIObject;
 *
 *          // do something with the UIObject
 *          for (const field of data.UIObject?.fields ?? []) {
 *              field.visible = Math.random() < 0.5;
 *          }
 *      });
 * }
 * ```
 *
 * ## Interceptors
 * Subscribing to events is done using the {@link Interceptor} function.
 *
 * The **CPI Node** allows addons to control the application flow by subscribing to events.
 *
 * Every event in the application is divided to 3 parts:
 *
 * * Before the main action
 * * The main action
 * * After the main action
 *
 * Addons can intercept any event and implement it's main action,
 * and/or perform some custom logic before and/or after the main action.
 *
 * #### The Interceptor lifecycle
 * ![Interceptor](media://interceptors.png)
 *
 * See {@link Interceptor} for expamle interceptors.
 *
 * @module events
 */
export * from './event-emitter';
export * from './interceptor';
