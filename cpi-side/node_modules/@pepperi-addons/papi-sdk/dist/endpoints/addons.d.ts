import Endpoint, { FindOptions } from '../endpoint';
import { Addon, InstalledAddon, AddonVersion, AddonAPIAsyncResult, AddonData, AddonDataScheme, Relation } from '../entities';
import { PapiClient } from '../papi-client';
declare class InstalledAddonEnpoint {
    private service;
    private addonUUID;
    constructor(service: PapiClient, addonUUID: string);
    install(version?: string): Promise<AddonAPIAsyncResult>;
    uninstall(): Promise<AddonAPIAsyncResult>;
    upgrade(version?: string): Promise<AddonAPIAsyncResult>;
    downgrade(version: string): Promise<AddonAPIAsyncResult>;
    get(): Promise<InstalledAddon>;
}
declare class InstalledAddonsEnpoint extends Endpoint<InstalledAddon> {
    constructor(service: PapiClient);
    addonUUID(uuid: string): InstalledAddonEnpoint;
}
declare class AddonApiEndpoint {
    private service;
    private options;
    constructor(service: PapiClient);
    uuid(uuid: string): this;
    file(fileName: string): this;
    func(functionName: string): this;
    sync(): this;
    async(): this;
    get(params?: any): Promise<any>;
    post(params?: any, body?: any): Promise<any>;
    private GetAddonApiUrl;
}
declare class AddonVersionEndpoint extends Endpoint<AddonVersion> {
    constructor(service: PapiClient);
}
declare class TableEndpoint extends Endpoint<AddonData> {
    private addonUUID;
    private tableName;
    constructor(service: PapiClient, addonUUID: string, tableName: string);
    key(keyName: string): {
        get: () => Promise<AddonData>;
        hardDelete: (force?: boolean) => Promise<AddonData>;
    };
}
export declare class AddonEndpoint extends Endpoint<Addon> {
    constructor(service: PapiClient);
    installedAddons: InstalledAddonsEnpoint;
    versions: AddonVersionEndpoint;
    api: AddonApiEndpoint;
    data: {
        schemes: {
            get: (params: FindOptions) => Promise<AddonDataScheme[]>;
            name: (name: string) => {
                get: () => Promise<AddonDataScheme>;
            };
            post: (body: AddonDataScheme) => Promise<AddonDataScheme>;
        };
        uuid: (addonUUID: string) => {
            table: (tableName: string) => TableEndpoint;
        };
        relations: Endpoint<Relation>;
    };
}
export {};
