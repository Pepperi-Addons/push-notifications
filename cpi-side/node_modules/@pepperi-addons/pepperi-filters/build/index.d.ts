import { JSONFilter, FieldType } from './json-filter';
import { NodeTransformer } from './json-filter-transformer';
import esb from 'elastic-builder';
/**
 * Concat two JSON Filters by combining them into one
 * @param f1 A JSONFilter
 * @param f2 Another JSON Filter
 * @param and use and operation. `true` by default.
 */
export declare function concat(and: boolean, f1: JSONFilter, ...args: (JSONFilter | undefined)[]): JSONFilter | undefined;
/**
 * Concat two Api query strings by combining them into one
 * @param f1 A where clause
 * @param f2 Another where clause
 * @param and use and operation. `true` by default.
 */
export declare function concat(and: boolean, s1: string, ...args: (string | undefined)[]): string;
export declare function parse(where: string, fields: {
    [key: string]: FieldType;
}): import("./json-filter").JSONComplexFilter | import("./json-filter").JSONStringFilter | import("./json-filter").JSONBoolFilter | import("./json-filter").JSONJsonBoolFilter | import("./json-filter").JSONDateFilter | import("./json-filter").JSONDateTimeFilter | import("./json-filter").JSONGuidFilter | import("./json-filter").JSONMultipleStringValuesFilter | import("./json-filter").JSONIntegerFilter | import("./json-filter").JSONDoubleFilter | undefined;
export declare function transform(jsonFilter: JSONFilter | undefined, transformations: {
    [key: string]: NodeTransformer;
}): import("./json-filter").JSONComplexFilter | import("./json-filter").JSONStringFilter | import("./json-filter").JSONBoolFilter | import("./json-filter").JSONJsonBoolFilter | import("./json-filter").JSONDateFilter | import("./json-filter").JSONDateTimeFilter | import("./json-filter").JSONGuidFilter | import("./json-filter").JSONMultipleStringValuesFilter | import("./json-filter").JSONIntegerFilter | import("./json-filter").JSONDoubleFilter | undefined;
export declare function toApiQueryString(jsonFilter: JSONFilter | undefined): string | undefined;
export declare function toKibanaQuery(jsonFilter: JSONFilter | undefined): esb.Query;
export declare function toKibanaQueryJSON(jsonFilter: JSONFilter | undefined): object;
export declare function filter<T>(objects: T[], jsonFilter: JSONFilter | undefined): T[];
export * from './json-filter';
